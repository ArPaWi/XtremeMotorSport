"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/react-slideshow-image";
exports.ids = ["vendor-chunks/react-slideshow-image"];
exports.modules = {

/***/ "(ssr)/./node_modules/react-slideshow-image/dist/react-slideshow-image.esm.js":
/*!******************************************************************************!*\
  !*** ./node_modules/react-slideshow-image/dist/react-slideshow-image.esm.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Fade: () => (/* binding */ Fade),\n/* harmony export */   Slide: () => (/* binding */ Slide),\n/* harmony export */   Zoom: () => (/* binding */ Zoom)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var resize_observer_polyfill__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! resize-observer-polyfill */ \"(ssr)/./node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js\");\n/* harmony import */ var _tweenjs_tween_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @tweenjs/tween.js */ \"(ssr)/./node_modules/@tweenjs/tween.js/dist/tween.esm.js\");\n\n\n\nfunction _extends() {\n    _extends = Object.assign ? Object.assign.bind() : function(target) {\n        for(var i = 1; i < arguments.length; i++){\n            var source = arguments[i];\n            for(var key in source){\n                if (Object.prototype.hasOwnProperty.call(source, key)) {\n                    target[key] = source[key];\n                }\n            }\n        }\n        return target;\n    };\n    return _extends.apply(this, arguments);\n}\nvar getStartingIndex = function getStartingIndex(children, defaultIndex) {\n    if (defaultIndex && defaultIndex < react__WEBPACK_IMPORTED_MODULE_0___default().Children.count(children)) {\n        return defaultIndex;\n    }\n    return 0;\n};\nvar getResponsiveSettings = function getResponsiveSettings(wrapperWidth, responsive) {\n    if (false) {}\n    return;\n};\nvar EASING_METHODS = {\n    linear: _tweenjs_tween_js__WEBPACK_IMPORTED_MODULE_2__.Easing.Linear.None,\n    ease: _tweenjs_tween_js__WEBPACK_IMPORTED_MODULE_2__.Easing.Quadratic.InOut,\n    \"ease-in\": _tweenjs_tween_js__WEBPACK_IMPORTED_MODULE_2__.Easing.Quadratic.In,\n    \"ease-out\": _tweenjs_tween_js__WEBPACK_IMPORTED_MODULE_2__.Easing.Quadratic.Out,\n    cubic: _tweenjs_tween_js__WEBPACK_IMPORTED_MODULE_2__.Easing.Cubic.InOut,\n    \"cubic-in\": _tweenjs_tween_js__WEBPACK_IMPORTED_MODULE_2__.Easing.Cubic.In,\n    \"cubic-out\": _tweenjs_tween_js__WEBPACK_IMPORTED_MODULE_2__.Easing.Cubic.Out\n};\nvar getEasing = function getEasing(easeMethod) {\n    if (easeMethod) {\n        return EASING_METHODS[easeMethod];\n    }\n    return EASING_METHODS.linear;\n};\nvar showPreviousArrow = function showPreviousArrow(_ref, currentIndex, moveSlides) {\n    var prevArrow = _ref.prevArrow, infinite = _ref.infinite;\n    var isDisabled = currentIndex <= 0 && !infinite;\n    var props = {\n        \"data-type\": \"prev\",\n        \"aria-label\": \"Previous Slide\",\n        disabled: isDisabled,\n        onClick: moveSlides\n    };\n    if (prevArrow) {\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().cloneElement(prevArrow, _extends({\n            className: (prevArrow.props.className || \"\") + \" nav \" + (isDisabled ? \"disabled\" : \"\")\n        }, props));\n    }\n    var className = \"nav default-nav \" + (isDisabled ? \"disabled\" : \"\");\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"button\", Object.assign({\n        type: \"button\",\n        className: className\n    }, props), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"svg\", {\n        width: \"24\",\n        height: \"24\",\n        viewBox: \"0 0 24 24\"\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"path\", {\n        d: \"M16.67 0l2.83 2.829-9.339 9.175 9.339 9.167-2.83 2.829-12.17-11.996z\"\n    })));\n};\nvar showNextArrow = function showNextArrow(properties, currentIndex, moveSlides, responsiveSettings) {\n    var nextArrow = properties.nextArrow, infinite = properties.infinite, children = properties.children;\n    var slidesToScroll = 1;\n    if (responsiveSettings) {\n        slidesToScroll = responsiveSettings == null ? void 0 : responsiveSettings.settings.slidesToScroll;\n    } else if (\"slidesToScroll\" in properties) {\n        slidesToScroll = properties.slidesToScroll || 1;\n    }\n    var isDisabled = currentIndex >= react__WEBPACK_IMPORTED_MODULE_0___default().Children.count(children) - slidesToScroll && !infinite;\n    var props = {\n        \"data-type\": \"next\",\n        \"aria-label\": \"Next Slide\",\n        disabled: isDisabled,\n        onClick: moveSlides\n    };\n    if (nextArrow) {\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().cloneElement(nextArrow, _extends({\n            className: (nextArrow.props.className || \"\") + \" nav \" + (isDisabled ? \"disabled\" : \"\")\n        }, props));\n    }\n    var className = \"nav default-nav \" + (isDisabled ? \"disabled\" : \"\");\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"button\", Object.assign({\n        type: \"button\",\n        className: className\n    }, props), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"svg\", {\n        width: \"24\",\n        height: \"24\",\n        viewBox: \"0 0 24 24\"\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"path\", {\n        d: \"M5 3l3.057-3 11.943 12-11.943 12-3.057-3 9-9z\"\n    })));\n};\nvar showDefaultIndicator = function showDefaultIndicator(isCurrentPageActive, key, indicatorProps) {\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"li\", {\n        key: key\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"button\", Object.assign({\n        type: \"button\",\n        className: \"each-slideshow-indicator \" + (isCurrentPageActive ? \"active\" : \"\")\n    }, indicatorProps)));\n};\nvar showCustomIndicator = function showCustomIndicator(isCurrentPageActive, key, indicatorProps, eachIndicator) {\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().cloneElement(eachIndicator, _extends({\n        className: eachIndicator.props.className + \" \" + (isCurrentPageActive ? \"active\" : \"\"),\n        key: key\n    }, indicatorProps));\n};\nvar showIndicators = function showIndicators(props, currentIndex, navigate, responsiveSettings) {\n    var children = props.children, indicators = props.indicators;\n    var slidesToScroll = 1;\n    if (responsiveSettings) {\n        slidesToScroll = responsiveSettings == null ? void 0 : responsiveSettings.settings.slidesToScroll;\n    } else if (\"slidesToScroll\" in props) {\n        slidesToScroll = props.slidesToScroll || 1;\n    }\n    var pages = Math.ceil(react__WEBPACK_IMPORTED_MODULE_0___default().Children.count(children) / slidesToScroll);\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"ul\", {\n        className: \"indicators\"\n    }, Array.from({\n        length: pages\n    }, function(_, key) {\n        var indicatorProps = {\n            \"data-key\": key,\n            \"aria-label\": \"Go to slide \" + (key + 1),\n            onClick: navigate\n        };\n        var isCurrentPageActive = Math.floor((currentIndex + slidesToScroll - 1) / slidesToScroll) === key;\n        if (typeof indicators === \"function\") {\n            return showCustomIndicator(isCurrentPageActive, key, indicatorProps, indicators(key));\n        }\n        return showDefaultIndicator(isCurrentPageActive, key, indicatorProps);\n    }));\n};\nvar defaultProps = {\n    duration: 5000,\n    transitionDuration: 1000,\n    defaultIndex: 0,\n    infinite: true,\n    autoplay: true,\n    indicators: false,\n    arrows: true,\n    pauseOnHover: true,\n    easing: \"linear\",\n    canSwipe: true,\n    cssClass: \"\",\n    responsive: []\n};\nvar FadeZoom = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().forwardRef(function(props, ref) {\n    var _useState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(getStartingIndex(props.children, props.defaultIndex)), index = _useState[0], setIndex = _useState[1];\n    var wrapperRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    var innerWrapperRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    var tweenGroup = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(new _tweenjs_tween_js__WEBPACK_IMPORTED_MODULE_2__.Group());\n    var timeout = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();\n    var resizeObserver = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();\n    var childrenCount = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(function() {\n        return react__WEBPACK_IMPORTED_MODULE_0___default().Children.count(props.children);\n    }, [\n        props.children\n    ]);\n    var applyStyle = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function() {\n        if (innerWrapperRef.current && wrapperRef.current) {\n            var wrapperWidth = wrapperRef.current.clientWidth;\n            var fullwidth = wrapperWidth * childrenCount;\n            innerWrapperRef.current.style.width = fullwidth + \"px\";\n            for(var _index = 0; _index < innerWrapperRef.current.children.length; _index++){\n                var eachDiv = innerWrapperRef.current.children[_index];\n                if (eachDiv) {\n                    eachDiv.style.width = wrapperWidth + \"px\";\n                    eachDiv.style.left = _index * -wrapperWidth + \"px\";\n                    eachDiv.style.display = \"block\";\n                }\n            }\n        }\n    }, [\n        wrapperRef,\n        innerWrapperRef,\n        childrenCount\n    ]);\n    var initResizeObserver = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function() {\n        if (wrapperRef.current) {\n            resizeObserver.current = new resize_observer_polyfill__WEBPACK_IMPORTED_MODULE_1__[\"default\"](function(entries) {\n                if (!entries) return;\n                applyStyle();\n            });\n            resizeObserver.current.observe(wrapperRef.current);\n        }\n    }, [\n        wrapperRef,\n        applyStyle\n    ]);\n    var play = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function() {\n        var autoplay = props.autoplay, children = props.children, duration = props.duration, infinite = props.infinite;\n        if (autoplay && react__WEBPACK_IMPORTED_MODULE_0___default().Children.count(children) > 1 && (infinite || index < react__WEBPACK_IMPORTED_MODULE_0___default().Children.count(children) - 1)) {\n            timeout.current = setTimeout(moveNext, duration);\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [\n        props,\n        index\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function() {\n        initResizeObserver();\n        return function() {\n            tweenGroup.current.removeAll();\n            clearTimeout(timeout.current);\n            removeResizeObserver();\n        };\n    }, [\n        initResizeObserver,\n        tweenGroup\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function() {\n        clearTimeout(timeout.current);\n        play();\n    }, [\n        index,\n        props.autoplay,\n        play\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function() {\n        applyStyle();\n    }, [\n        childrenCount,\n        applyStyle\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useImperativeHandle)(ref, function() {\n        return {\n            goNext: function goNext() {\n                moveNext();\n            },\n            goBack: function goBack() {\n                moveBack();\n            },\n            goTo: function goTo(index, options) {\n                if (options != null && options.skipTransition) {\n                    setIndex(index);\n                } else {\n                    moveTo(index);\n                }\n            }\n        };\n    });\n    var removeResizeObserver = function removeResizeObserver() {\n        if (resizeObserver.current && wrapperRef.current) {\n            resizeObserver.current.unobserve(wrapperRef.current);\n        }\n    };\n    var pauseSlides = function pauseSlides() {\n        if (props.pauseOnHover) {\n            clearTimeout(timeout.current);\n        }\n    };\n    var startSlides = function startSlides() {\n        var pauseOnHover = props.pauseOnHover, autoplay = props.autoplay, duration = props.duration;\n        if (pauseOnHover && autoplay) {\n            timeout.current = setTimeout(function() {\n                return moveNext();\n            }, duration);\n        }\n    };\n    var moveNext = function moveNext() {\n        var children = props.children, infinite = props.infinite;\n        if (!infinite && index === react__WEBPACK_IMPORTED_MODULE_0___default().Children.count(children) - 1) {\n            return;\n        }\n        transitionSlide((index + 1) % react__WEBPACK_IMPORTED_MODULE_0___default().Children.count(children));\n    };\n    var moveBack = function moveBack() {\n        var children = props.children, infinite = props.infinite;\n        if (!infinite && index === 0) {\n            return;\n        }\n        transitionSlide(index === 0 ? react__WEBPACK_IMPORTED_MODULE_0___default().Children.count(children) - 1 : index - 1);\n    };\n    var preTransition = function preTransition(event) {\n        var currentTarget = event.currentTarget;\n        if (currentTarget.dataset.type === \"prev\") {\n            moveBack();\n        } else {\n            moveNext();\n        }\n    };\n    var animate = function animate() {\n        requestAnimationFrame(animate);\n        tweenGroup.current.update();\n    };\n    var transitionSlide = function transitionSlide(newIndex) {\n        var existingTweens = tweenGroup.current.getAll();\n        if (!existingTweens.length) {\n            var _innerWrapperRef$curr;\n            if (!((_innerWrapperRef$curr = innerWrapperRef.current) != null && _innerWrapperRef$curr.children[newIndex])) {\n                newIndex = 0;\n            }\n            clearTimeout(timeout.current);\n            var value = {\n                opacity: 0,\n                scale: 1\n            };\n            animate();\n            var tween = new _tweenjs_tween_js__WEBPACK_IMPORTED_MODULE_2__.Tween(value, tweenGroup.current).to({\n                opacity: 1,\n                scale: props.scale\n            }, props.transitionDuration).onUpdate(function(value) {\n                if (!innerWrapperRef.current) {\n                    return;\n                }\n                innerWrapperRef.current.children[newIndex].style.opacity = value.opacity;\n                innerWrapperRef.current.children[index].style.opacity = 1 - value.opacity;\n                innerWrapperRef.current.children[index].style.transform = \"scale(\" + value.scale + \")\";\n            });\n            tween.easing(getEasing(props.easing));\n            tween.onStart(function() {\n                if (typeof props.onStartChange === \"function\") {\n                    props.onStartChange(index, newIndex);\n                }\n            });\n            tween.onComplete(function() {\n                if (innerWrapperRef.current) {\n                    setIndex(newIndex);\n                    innerWrapperRef.current.children[index].style.transform = \"scale(1)\";\n                }\n                if (typeof props.onChange === \"function\") {\n                    props.onChange(index, newIndex);\n                }\n            });\n            tween.start();\n        }\n    };\n    var moveTo = function moveTo(gotoIndex) {\n        if (gotoIndex !== index) {\n            transitionSlide(gotoIndex);\n        }\n    };\n    var navigate = function navigate(event) {\n        var currentTarget = event.currentTarget;\n        if (!currentTarget.dataset.key) {\n            return;\n        }\n        if (parseInt(currentTarget.dataset.key) !== index) {\n            moveTo(parseInt(currentTarget.dataset.key));\n        }\n    };\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n        dir: \"ltr\",\n        \"aria-roledescription\": \"carousel\"\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n        className: \"react-slideshow-container \" + (props.cssClass || \"\"),\n        onMouseEnter: pauseSlides,\n        onMouseOver: pauseSlides,\n        onMouseLeave: startSlides\n    }, props.arrows && showPreviousArrow(props, index, preTransition), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n        className: \"react-slideshow-fadezoom-wrapper \" + props.cssClass,\n        ref: wrapperRef\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n        className: \"react-slideshow-fadezoom-images-wrap\",\n        ref: innerWrapperRef\n    }, (react__WEBPACK_IMPORTED_MODULE_0___default().Children.map(props.children, function(thisArg) {\n        return thisArg;\n    }) || []).map(function(each, key) {\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n            style: {\n                opacity: key === index ? \"1\" : \"0\",\n                zIndex: key === index ? \"1\" : \"0\"\n            },\n            \"data-index\": key,\n            key: key,\n            \"aria-roledescription\": \"slide\",\n            \"aria-hidden\": key === index ? \"false\" : \"true\"\n        }, each);\n    }))), props.arrows && showNextArrow(props, index, preTransition)), props.indicators && showIndicators(props, index, navigate));\n});\nFadeZoom.defaultProps = defaultProps;\nvar Fade = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().forwardRef(function(props, ref) {\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(FadeZoom, Object.assign({}, props, {\n        scale: 1,\n        ref: ref\n    }));\n});\nFade.defaultProps = defaultProps;\nvar Zoom = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().forwardRef(function(props, ref) {\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(FadeZoom, Object.assign({}, props, {\n        ref: ref\n    }));\n});\nZoom.defaultProps = defaultProps;\nvar Slide = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().forwardRef(function(props, ref) {\n    var _useState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(getStartingIndex(props.children, props.defaultIndex)), index = _useState[0], setIndex = _useState[1];\n    var _useState2 = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0), wrapperSize = _useState2[0], setWrapperSize = _useState2[1];\n    var wrapperRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    var innerWrapperRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    var tweenGroup = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(new _tweenjs_tween_js__WEBPACK_IMPORTED_MODULE_2__.Group());\n    var responsiveSettings = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(function() {\n        return getResponsiveSettings(wrapperSize, props.responsive);\n    }, [\n        wrapperSize,\n        props.responsive\n    ]);\n    var slidesToScroll = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(function() {\n        if (responsiveSettings) {\n            return responsiveSettings.settings.slidesToScroll;\n        }\n        return props.slidesToScroll || 1;\n    }, [\n        responsiveSettings,\n        props.slidesToScroll\n    ]);\n    var slidesToShow = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(function() {\n        if (responsiveSettings) {\n            return responsiveSettings.settings.slidesToShow;\n        }\n        return props.slidesToShow || 1;\n    }, [\n        responsiveSettings,\n        props.slidesToShow\n    ]);\n    var childrenCount = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(function() {\n        return react__WEBPACK_IMPORTED_MODULE_0___default().Children.count(props.children);\n    }, [\n        props.children\n    ]);\n    var eachChildSize = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(function() {\n        return wrapperSize / slidesToShow;\n    }, [\n        wrapperSize,\n        slidesToShow\n    ]);\n    var timeout = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();\n    var resizeObserver = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();\n    var startingSwipePosition;\n    var dragging = false;\n    var distanceSwiped = 0;\n    var translateType = props.vertical ? \"translateY\" : \"translateX\";\n    var swipeAttributeType = props.vertical ? \"clientY\" : \"clientX\";\n    var swipePageAttributeType = props.vertical ? \"pageY\" : \"pageX\";\n    var applyStyle = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function() {\n        if (innerWrapperRef.current) {\n            var fullSize = wrapperSize * innerWrapperRef.current.children.length;\n            var attribute = props.vertical ? \"height\" : \"width\";\n            innerWrapperRef.current.style[attribute] = fullSize + \"px\";\n            if (props.vertical && wrapperRef.current) {\n                wrapperRef.current.style[attribute] = wrapperSize + \"px\";\n            }\n            for(var _index = 0; _index < innerWrapperRef.current.children.length; _index++){\n                var eachDiv = innerWrapperRef.current.children[_index];\n                if (eachDiv) {\n                    if (!props.vertical) {\n                        eachDiv.style[attribute] = eachChildSize + \"px\";\n                    }\n                    eachDiv.style.display = \"block\";\n                }\n            }\n        }\n    }, [\n        wrapperSize,\n        eachChildSize\n    ]);\n    var initResizeObserver = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function() {\n        if (wrapperRef.current) {\n            resizeObserver.current = new resize_observer_polyfill__WEBPACK_IMPORTED_MODULE_1__[\"default\"](function(entries) {\n                if (!entries) return;\n                setSize();\n            });\n            resizeObserver.current.observe(wrapperRef.current);\n        }\n    }, [\n        wrapperRef\n    ]);\n    var play = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function() {\n        var autoplay = props.autoplay, infinite = props.infinite, duration = props.duration;\n        if (autoplay && (infinite || index < childrenCount - 1)) {\n            timeout.current = setTimeout(moveNext, duration);\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [\n        props,\n        childrenCount,\n        index\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function() {\n        applyStyle();\n    }, [\n        wrapperSize,\n        applyStyle\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function() {\n        initResizeObserver();\n        return function() {\n            tweenGroup.current.removeAll();\n            clearTimeout(timeout.current);\n            removeResizeObserver();\n        };\n    }, [\n        wrapperRef,\n        initResizeObserver,\n        tweenGroup\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function() {\n        clearTimeout(timeout.current);\n        play();\n    }, [\n        index,\n        wrapperSize,\n        props.autoplay,\n        play\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useImperativeHandle)(ref, function() {\n        return {\n            goNext: function goNext() {\n                moveNext();\n            },\n            goBack: function goBack() {\n                moveBack();\n            },\n            goTo: function goTo(index, options) {\n                if (options != null && options.skipTransition) {\n                    setIndex(index);\n                } else {\n                    moveTo(index);\n                }\n            }\n        };\n    });\n    var removeResizeObserver = function removeResizeObserver() {\n        if (resizeObserver && wrapperRef.current) {\n            resizeObserver.current.unobserve(wrapperRef.current);\n        }\n    };\n    var pauseSlides = function pauseSlides() {\n        if (props.pauseOnHover) {\n            clearTimeout(timeout.current);\n        }\n    };\n    var swipe = function swipe(event) {\n        if (props.canSwipe && dragging) {\n            var position;\n            if (window.TouchEvent && event.nativeEvent instanceof TouchEvent) {\n                position = event.nativeEvent.touches[0][swipePageAttributeType];\n            } else {\n                position = event.nativeEvent[swipeAttributeType];\n            }\n            if (position && startingSwipePosition) {\n                var translateValue = eachChildSize * (index + getOffset());\n                var distance = position - startingSwipePosition;\n                if (!props.infinite && index === childrenCount - slidesToScroll && distance < 0) {\n                    // if it is the last and infinite is false and you're swiping left\n                    // then nothing happens\n                    return;\n                }\n                if (!props.infinite && index === 0 && distance > 0) {\n                    // if it is the first and infinite is false and you're swiping right\n                    // then nothing happens\n                    return;\n                }\n                distanceSwiped = distance;\n                translateValue -= distanceSwiped;\n                innerWrapperRef.current.style.transform = translateType + \"(-\" + translateValue + \"px)\";\n            }\n        }\n    };\n    var moveNext = function moveNext() {\n        if (!props.infinite && index === childrenCount - slidesToScroll) {\n            return;\n        }\n        var nextIndex = calculateIndex(index + slidesToScroll);\n        transitionSlide(nextIndex);\n    };\n    var moveBack = function moveBack() {\n        if (!props.infinite && index === 0) {\n            return;\n        }\n        var previousIndex = index - slidesToScroll;\n        if (previousIndex % slidesToScroll) {\n            previousIndex = Math.ceil(previousIndex / slidesToScroll) * slidesToScroll;\n        }\n        transitionSlide(previousIndex);\n    };\n    var goToSlide = function goToSlide(_ref) {\n        var currentTarget = _ref.currentTarget;\n        if (!currentTarget.dataset.key) {\n            return;\n        }\n        var datasetKey = parseInt(currentTarget.dataset.key);\n        moveTo(datasetKey * slidesToScroll);\n    };\n    var moveTo = function moveTo(index) {\n        transitionSlide(calculateIndex(index));\n    };\n    var calculateIndex = function calculateIndex(nextIndex) {\n        if (nextIndex < childrenCount && nextIndex + slidesToScroll > childrenCount) {\n            if ((childrenCount - slidesToScroll) % slidesToScroll) {\n                return childrenCount - slidesToScroll;\n            }\n            return nextIndex;\n        }\n        return nextIndex;\n    };\n    var startSlides = function startSlides() {\n        if (dragging) {\n            endSwipe();\n        } else if (props.pauseOnHover && props.autoplay) {\n            timeout.current = setTimeout(moveNext, props.duration);\n        }\n    };\n    var moveSlides = function moveSlides(_ref2) {\n        var dataset = _ref2.currentTarget.dataset;\n        if (dataset.type === \"next\") {\n            moveNext();\n        } else {\n            moveBack();\n        }\n    };\n    var renderPreceedingSlides = function renderPreceedingSlides() {\n        return react__WEBPACK_IMPORTED_MODULE_0___default().Children.toArray(props.children).slice(-slidesToShow).map(function(each, index) {\n            return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n                \"data-index\": index - slidesToShow,\n                \"aria-roledescription\": \"slide\",\n                \"aria-hidden\": \"true\",\n                key: index - slidesToShow\n            }, each);\n        });\n    };\n    var renderTrailingSlides = function renderTrailingSlides() {\n        if (!props.infinite && slidesToShow === slidesToScroll) {\n            return;\n        }\n        return react__WEBPACK_IMPORTED_MODULE_0___default().Children.toArray(props.children).slice(0, slidesToShow).map(function(each, index) {\n            return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n                \"data-index\": childrenCount + index,\n                \"aria-roledescription\": \"slide\",\n                \"aria-hidden\": \"true\",\n                key: childrenCount + index\n            }, each);\n        });\n    };\n    var setSize = function setSize() {\n        var attribute = props.vertical ? \"clientHeight\" : \"clientWidth\";\n        if (props.vertical) {\n            if (innerWrapperRef.current) {\n                setWrapperSize(innerWrapperRef.current.children[0][attribute]);\n            }\n        } else {\n            if (wrapperRef.current) {\n                setWrapperSize(wrapperRef.current[attribute]);\n            }\n        }\n    };\n    var startSwipe = function startSwipe(event) {\n        if (props.canSwipe) {\n            if (window.TouchEvent && event.nativeEvent instanceof TouchEvent) {\n                startingSwipePosition = event.nativeEvent.touches[0][swipePageAttributeType];\n            } else {\n                startingSwipePosition = event.nativeEvent[swipeAttributeType];\n            }\n            clearTimeout(timeout.current);\n            dragging = true;\n        }\n    };\n    var endSwipe = function endSwipe() {\n        if (props.canSwipe) {\n            dragging = false;\n            if (Math.abs(distanceSwiped) / wrapperSize > 0.2) {\n                if (distanceSwiped < 0) {\n                    moveNext();\n                } else {\n                    moveBack();\n                }\n            } else {\n                if (Math.abs(distanceSwiped) > 0) {\n                    transitionSlide(index, 300);\n                }\n            }\n        }\n    };\n    var animate = function animate() {\n        requestAnimationFrame(animate);\n        tweenGroup.current.update();\n    };\n    var transitionSlide = function transitionSlide(toIndex, animationDuration) {\n        var transitionDuration = animationDuration || props.transitionDuration;\n        var currentIndex = index;\n        var existingTweens = tweenGroup.current.getAll();\n        if (!wrapperRef.current) {\n            return;\n        }\n        var attribute = props.vertical ? \"clientHeight\" : \"clientWidth\";\n        var childSize = wrapperRef.current[attribute] / slidesToShow;\n        if (!existingTweens.length) {\n            clearTimeout(timeout.current);\n            var value = {\n                margin: -childSize * (currentIndex + getOffset()) + distanceSwiped\n            };\n            var tween = new _tweenjs_tween_js__WEBPACK_IMPORTED_MODULE_2__.Tween(value, tweenGroup.current).to({\n                margin: -childSize * (toIndex + getOffset())\n            }, transitionDuration).onUpdate(function(value) {\n                if (innerWrapperRef.current) {\n                    innerWrapperRef.current.style.transform = translateType + \"(\" + value.margin + \"px)\";\n                }\n            });\n            tween.easing(getEasing(props.easing));\n            animate();\n            var newIndex = toIndex;\n            if (newIndex < 0) {\n                newIndex = childrenCount - slidesToScroll;\n            } else if (newIndex >= childrenCount) {\n                newIndex = 0;\n            }\n            tween.onStart(function() {\n                if (typeof props.onStartChange === \"function\") {\n                    props.onStartChange(index, newIndex);\n                }\n            });\n            tween.onComplete(function() {\n                distanceSwiped = 0;\n                if (typeof props.onChange === \"function\") {\n                    props.onChange(index, newIndex);\n                }\n                setIndex(newIndex);\n            });\n            tween.start();\n        }\n    };\n    var isSlideActive = function isSlideActive(key) {\n        return key < index + slidesToShow && key >= index;\n    };\n    var getOffset = function getOffset() {\n        if (!props.infinite) {\n            return 0;\n        }\n        return slidesToShow;\n    };\n    var style = {\n        transform: translateType + \"(-\" + (index + getOffset()) * eachChildSize + \"px)\"\n    };\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n        dir: \"ltr\",\n        \"aria-roledescription\": \"carousel\"\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n        className: \"react-slideshow-container\",\n        onMouseEnter: pauseSlides,\n        onMouseOver: pauseSlides,\n        onMouseLeave: startSlides,\n        onMouseDown: startSwipe,\n        onMouseUp: endSwipe,\n        onMouseMove: swipe,\n        onTouchStart: startSwipe,\n        onTouchEnd: endSwipe,\n        onTouchCancel: endSwipe,\n        onTouchMove: swipe\n    }, props.arrows && showPreviousArrow(props, index, moveSlides), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n        className: \"react-slideshow-wrapper slide \" + (props.cssClass || \"\"),\n        ref: wrapperRef\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n        className: \"images-wrap \" + (props.vertical ? \"vertical\" : \"horizontal\"),\n        style: style,\n        ref: innerWrapperRef\n    }, props.infinite && renderPreceedingSlides(), (react__WEBPACK_IMPORTED_MODULE_0___default().Children.map(props.children, function(thisArg) {\n        return thisArg;\n    }) || []).map(function(each, key) {\n        var isThisSlideActive = isSlideActive(key);\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n            \"data-index\": key,\n            key: key,\n            className: isThisSlideActive ? \"active\" : \"\",\n            \"aria-roledescription\": \"slide\",\n            \"aria-hidden\": isThisSlideActive ? \"false\" : \"true\"\n        }, each);\n    }), renderTrailingSlides())), props.arrows && showNextArrow(props, index, moveSlides, responsiveSettings)), !!props.indicators && showIndicators(props, index, goToSlide, responsiveSettings));\n});\nSlide.defaultProps = defaultProps;\n //# sourceMappingURL=react-slideshow-image.esm.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-slideshow-image/dist/react-slideshow-image.esm.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/react-slideshow-image/dist/styles.css":
/*!************************************************************!*\
  !*** ./node_modules/react-slideshow-image/dist/styles.css ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"d78068798b01\");\nif (false) {}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVhY3Qtc2xpZGVzaG93LWltYWdlL2Rpc3Qvc3R5bGVzLmNzcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsaUVBQWUsY0FBYztBQUM3QixJQUFJLEtBQVUsRUFBRSxFQUF1QiIsInNvdXJjZXMiOlsid2VicGFjazovL2tpa2ktbWFzc2FnZS8uL25vZGVfbW9kdWxlcy9yZWFjdC1zbGlkZXNob3ctaW1hZ2UvZGlzdC9zdHlsZXMuY3NzPzg4MzciXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgXCJkNzgwNjg3OThiMDFcIlxuaWYgKG1vZHVsZS5ob3QpIHsgbW9kdWxlLmhvdC5hY2NlcHQoKSB9XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-slideshow-image/dist/styles.css\n");

/***/ })

};
;